<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Image Blur Processor</title>
    <script src="https://cdn.tailwindcss.com"></script>
  </head>

  <body class="bg-gray-100 min-h-screen flex items-center justify-center">
    <div class="container mx-auto p-8 bg-white shadow-lg rounded-lg">
      <h1 class="text-2xl font-bold text-gray-800 mb-6 text-center">
        Image Processor
      </h1>
      <div class="text-gray-500 my-2 flex justify-end">
        You have a total of <%- total_available_cors %> CORS in your system.
      </div>

      <form id="image-form" class="space-y-6">
        <div>
          <label
            for="images"
            class="block text-sm font-medium text-gray-700 mb-2"
            >Select Images</label
          >
          <input
            type="file"
            id="images"
            name="images"
            multiple
            accept="image/*"
            class="block w-full text-sm text-gray-500 border border-gray-300 rounded-lg cursor-pointer focus:outline-none focus:border-blue-500"
          />
          <p class="mt-2 text-sm text-gray-500">
            You can select multiple images.
          </p>
        </div>

        <div>
          <label
            for="cors-level"
            class="block text-sm font-medium text-gray-700 mb-2"
            >How many CORS to use?</label
          >
          <input
            type="range"
            id="cors-level"
            name="cors-level"
            min="1"
            max="<%- total_available_cors %>"
            value="1"
            class="w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer"
          />
          <p
            id="cors-level-display"
            class="mt-2 text-sm text-gray-500 text-center"
          >
            Selected CORS: <span id="selected-cors-level">1</span>
          </p>
        </div>

        <div>
          <label
            for="blur-level"
            class="block text-sm font-medium text-gray-700 mb-2"
            >Blur Intensity</label
          >
          <input
            type="range"
            id="blur-level"
            name="blur-level"
            min="1"
            max="5"
            value="1"
            class="w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer"
          />
          <p
            id="blur-level-display"
            class="mt-2 text-sm text-gray-500 text-center"
          >
            Selected Intensity: <span id="selected-blur-level">1</span>
          </p>
        </div>

        <div>
          <span class="block text-sm font-medium text-gray-700 mb-2"
            >Convert to</span
          >
          <div class="flex items-center space-x-4">
            <label class="inline-flex items-center">
              <input
                type="radio"
                name="format"
                value="png"
                class="form-radio text-blue-500"
                checked
              />
              <span class="ml-2 text-gray-700">PNG</span>
            </label>
            <label class="inline-flex items-center">
              <input
                type="radio"
                name="format"
                value="jpeg"
                class="form-radio text-blue-500"
              />
              <span class="ml-2 text-gray-700">JPEG</span>
            </label>
          </div>
        </div>

        <div>
          <label
            for="resize"
            class="block text-sm font-medium text-gray-700 mb-2"
            >Resize (optional)</label
          >
          <div class="flex space-x-4">
            <input
              type="number"
              id="width"
              name="width"
              placeholder="Width (px)"
              class="block w-1/2 text-sm text-gray-700 border border-gray-300 rounded-lg p-2 focus:outline-none focus:border-blue-500"
            />
            <input
              type="number"
              id="height"
              name="heigh    console.log('Processing images:', images);t"
              placeholder="Height (px)"
              class="block w-1/2 text-sm text-gray-700 border border-gray-300 rounded-lg p-2 focus:outline-none focus:border-blue-500"
            />
          </div>
          <p class="mt-2 text-sm text-gray-500">
            Leave blank to keep original dimensions.
          </p>
        </div>

        <button
          type="submit"
          class="w-full bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded-lg focus:outline-none"
        >
          Process Images
        </button>
      </form>
      <div>
        <h2 class="text-2xl font-bold text-gray-800 mt-8 text-left">
          Processed Images
        </h2>
        <p class="text-sm text-gray-500 mt-2">
          Total time taken: <span id="total-time-taken">0</span> ms
        </p>
        <p class="text-sm text-gray-500 mt-2">
          Core used: <span id="total-core-used">0</span>
        </p>
      </div>
    </div>

    <script>
      const corsLevelSlider = document.getElementById('cors-level');
      const corsLevelValue = document.getElementById('selected-cors-level');
      corsLevelSlider.addEventListener('input', () => {
        corsLevelValue.textContent = corsLevelSlider.value;
      });

      const blurLevelSlider = document.getElementById('blur-level');
      const blurLevelValue = document.getElementById('selected-blur-level');
      blurLevelSlider.addEventListener('input', () => {
        blurLevelValue.textContent = blurLevelSlider.value;
      });

      const downloadContainer = document.getElementById('download-container');
      const totalTimeTaken = document.getElementById('total-time-taken');
      const totalCoreUsed = document.getElementById('total-core-used');

      // SUBMIT FORM
      const form = document.getElementById('image-form');
      form.addEventListener('submit', async (e) => {
        e.preventDefault();

        const formData = new FormData(form);

        const response = await fetch('/process', {
          method: 'POST',
          body: formData,
        });

        const data = await response.json();

        const { time_taken, core_used } = data;

        totalTimeTaken.textContent = Number(time_taken).toFixed(2);
        totalCoreUsed.textContent = core_used;
      });
    </script>
  </body>
</html>
